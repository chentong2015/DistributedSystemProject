public class BaseRedis {

    // 为什么使用缓存: 缓解数据库压力, 提升性能

    // Redis简介：性能强大的分布式缓存中间件(单机的QPS每秒处理几万请求)
    // 1. 不适合存储大量的信息，只暂存关键的信息
    // 2. 操作是微秒级别的，对于某些业务场景下，性能明显优于MySQL数据库
    // 3. 重构数据存储的方式，和业务逻辑的轻松实现(不同场景使用不同数据类型来实现)

    // Redis应用场景
    // 1. 缓存
    // 2. 分布式计数器: 对String进行频繁的自增和自减
    // 3. 分布式ID生成器: 一次请求一个大一点的步长incr 2000
    // 4. 海量数据存储: bitmap
    // 5. 会话缓存: 统一存储多态服务器的会话信息
    // 6. 分布式队列，阻塞队列
    // 7. 分布式锁: 互联网秒杀, 抢优惠券
    // 8. 热点数据存储，排行榜

    // 早期新浪微博后端使用redis实现，使用集群架构(单个结点挂了不影响)，配置Redis的容量为T级别
    // BAT后台的分布式缓存/中间件，基本使用自研的方式来实现，保证源码的可控性，容量扩展
    // WeChat这种级别的应用，不会使用Redis，难以修改，处理问题
}
